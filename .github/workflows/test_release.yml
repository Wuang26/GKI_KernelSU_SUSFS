name: Test Release

permissions:
  contents: write
  actions: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true
      kernels_to_build:
        description: |
          Comma-separated list of kernels to build/release, e.g.:
          a12-5.10,a13-5.10,a13-5.15,a14-5.15,a14-6.1,a15-6.6
          or "all" to build every kernel.
        required: true
        type: string
        default: 'all'
      kernelsu_variant:
        description: "Select KernelSU"
        required: true
        type: choice
        options:
        - Official
        - Next
        - MKSU
        - SukiSU
        default: SukiSU
      kernelsu_branch:
        description: "Select KSU branch"
        required: true
        type: choice
        options:
        - Stable(标准)
        - Dev(开发)
        - Other(其他/指定)
        default: Stable(标准)
      kernel_name:
        description: 'Custom kernel name (e.g., Kousei)'
        required: false
        type: string
        default: 'Kousei'
      version:
        description: 'Custom version name (e.g., characters after 5.10.198 / leave blank to use default version number)'
        required: false
        type: string
      use_zram:
        description: 'Enable more ZRAM algorithms?'
        required: true
        type: boolean
        default: true
      use_kpm:
        description: 'Enable KPM functionality?'
        required: true
        type: boolean
        default: true
      get_manager:
        description: 'Get the latest KSU Manager at the same time?'
        required: true
        type: boolean
        default: false

jobs:
  get_manager:
    if: ${{ inputs.get_manager }}
    uses: ./.github/workflows/get-manager.yml
    secrets: inherit
    with:
      kernelsu_variant: ${{ inputs.kernelsu_variant }}

  build-kernel-a12-5-10:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a12-5.10')
    uses: ./.github/workflows/kernel-a12-5.10.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}

  build-kernel-a13-5-10:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a13-5.10')
    uses: ./.github/workflows/kernel-a13-5.10.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}

  build-kernel-a13-5-15:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a13-5.15')
    uses: ./.github/workflows/kernel-a13-5.15.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}
      

  build-kernel-a14-5-15:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a14-5.15')
    uses: ./.github/workflows/kernel-a14-5.15.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}

  build-kernel-a14-6-1:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a14-6.1')
    uses: ./.github/workflows/kernel-a14-6.1.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}

  build-kernel-a15-6-6:
    if: contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a15-6.6')
    uses: ./.github/workflows/kernel-a15-6.6.yml
    secrets: inherit
    with:
      make_release: ${{ inputs.make_release }}
      kernelsu_variant: ${{ inputs.kernelsu_variant }}
      kernelsu_branch: ${{ inputs.kernelsu_branch }}
      version: ${{ inputs.version }}
      use_zram: ${{ inputs.use_zram }}
      use_kpm: ${{ inputs.use_kpm }}
      kernel_name: ${{ inputs.kernel_name }}

  check-build-status:
    runs-on: ubuntu-latest
    needs:
      - get_manager
      - build-kernel-a12-5-10
      - build-kernel-a13-5-10
      - build-kernel-a13-5-15
      - build-kernel-a14-5-15
      - build-kernel-a14-6-1
      - build-kernel-a15-6-6
    if: always()
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    env:
      SHOULD_RUN_A12_5_10: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a12-5.10') }}
      SHOULD_RUN_A13_5_10: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a13-5.10') }}
      SHOULD_RUN_A13_5_15: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a13-5.15') }}
      SHOULD_RUN_A14_5_15: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a14-5.15') }}
      SHOULD_RUN_A14_6_1: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a14-6.1') }}
      SHOULD_RUN_A15_6_6: ${{ contains(github.event.inputs.kernels_to_build, 'all') || contains(github.event.inputs.kernels_to_build, 'a15-6.6') }}
      RESULT_GET_MANAGER: ${{ needs.get_manager.result }}
      RESULT_A12_5_10: ${{ needs.build-kernel-a12-5-10.result }}
      RESULT_A13_5_10: ${{ needs.build-kernel-a13-5-10.result }}
      RESULT_A13_5_15: ${{ needs.build-kernel-a13-5-15.result }}
      RESULT_A14_5_15: ${{ needs.build-kernel-a14-5-15.result }}
      RESULT_A14_6_1: ${{ needs.build-kernel-a14-6-1.result }}
      RESULT_A15_6_6: ${{ needs.build-kernel-a15-6-6.result }}
    steps:
      - name: Determine if release should proceed
        id: check
        run: |
          SHOULD_PROCEED="true"
          ERROR_MESSAGE=""
          echo "--- Checking Job Statuses ---"
          echo "get_manager result: $RESULT_GET_MANAGER"
          # 1. Check get_manager job only if it was supposed to run
          if [[ "${{ inputs.get_manager }}" == "true" ]]; then
            if [[ "$RESULT_GET_MANAGER" != "success" ]]; then
              SHOULD_PROCEED="false"
              ERROR_MESSAGE+="get_manager job did not succeed (result: $RESULT_GET_MANAGER). "
            fi
          fi
          # Function to check a kernel job
          check_kernel_job() {
            local kernel_id=$1
            local should_run_flag=$2
            local actual_result=$3
            echo "Checking kernel $kernel_id (Should Run: $should_run_flag, Actual Result: $actual_result)..."
            if [[ "$should_run_flag" == "true" ]]; then
              if [[ "$actual_result" != "success" ]]; then
                SHOULD_PROCEED="false"
                ERROR_MESSAGE+="Job for $kernel_id was expected to run but did not succeed (result: $actual_result). "
              fi
            else
              if [[ "$actual_result" == "failure" ]]; then
                SHOULD_PROCEED="false"
                ERROR_MESSAGE+="Job for $kernel_id was NOT expected to run but failed (result: $actual_result). This indicates a problem. "
              fi
            fi
          }
          check_kernel_job "a12-5.10" "$SHOULD_RUN_A12_5_10" "$RESULT_A12_5_10"
          check_kernel_job "a13-5.10" "$SHOULD_RUN_A13_5_10" "$RESULT_A13_5_10"
          check_kernel_job "a13-5.15" "$SHOULD_RUN_A13_5_15" "$RESULT_A13_5_15"
          check_kernel_job "a14-5.15" "$SHOULD_RUN_A14_5_15" "$RESULT_A14_5_15"
          check_kernel_job "a14-6.1" "$SHOULD_RUN_A14_6_1" "$RESULT_A14_6_1"
          check_kernel_job "a15-6.6" "$SHOULD_RUN_A15_6_6" "$RESULT_A15_6_6"
          echo "Final decision - SHOULD_PROCEED: $SHOULD_PROCEED"
          echo "Accumulated Errors: $ERROR_MESSAGE"
          echo "should_release=$SHOULD_PROCEED" >> "$GITHUB_OUTPUT"
          if [[ "$SHOULD_PROCEED" == "false" ]]; then
            echo "::error::Release blocked due to issues: $ERROR_MESSAGE"
            exit 1
          fi

  trigger-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - check-build-status
      - get_manager
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts-${{ github.run_id }}

      - name: Prepare Artifacts for Download
        run: |
          mkdir -p release-assets
          find ./release-artifacts-${{ github.run_id }} -type f -exec cp -v {} ./release-assets \;
          cd release-assets
          sha256sum * > SHA256SUMS.txt
          cd ..
          echo "Artifacts prepared for download:"
          ls -lh ./release-assets
